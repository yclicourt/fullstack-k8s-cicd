# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ci:

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Install node
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: Install dependencies frontend
      run: |
        cd frontend
        npm ci
        npm run build --if-present
        
    - name: Install dependencies backend
      run: |
        cd backend
        npm ci
        npm run build --if-present
        
    - name: Set up Docker Build to Image Frontend
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push to Registry
      uses: docker/build-push-action@v6
      with:
        context: ./frontend
        push: true
        tags: yoandevelop/frontend-topic:${{ github.sha }}

    - name: Set up Docker Build to Image Backend
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push to Registry
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: yoandevelop/backend-topic-api:${{ github.sha }}
  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:

      - name: Check out code
        uses: actions/checkout@v4

      - name: Start minikube
        uses: medyagh/setup-minikube@latest

      - name: Try the cluster!
        run: kubectl get pods -A

      - name: Deploy to minikube
        run: |
          kubectl create ns topics
          kubectl config set-context --current --namespace=topics
          kubectl apply -R -f ./deploy-k8s/

      - name: Test service URLs
        run: |
          minikube service list
          minikube service frontend-topic-svc -n topics --url
          echo -n "------------------opening the service-----------------------"
          curl $(minikube service frontend-topic-svc -n topics --url)/version


