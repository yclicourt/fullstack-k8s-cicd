variables:
    IMAGE_BACKEND: backend-topic-api
    IMAGE_FRONTEND: frontend-topic
    IMAGE_TAG: v1.1

stages:
    - install
    - build
    - deploy

install_dependencies_backend:
    stage: install
    image: node:alpine
    before_script:
        - cd backend
    script:
        - npm install

install_dependencies_frontend:
    stage: install
    image: node:alpine
    before_script:
        - cd frontend
    script:
        - npm install

build_image_backend:
    stage: build
    image: docker:20.10.7
    services:
      - docker:20.10.7-dind


    variables:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_CERTDIR: "/certs"
      DOCKER_TLS_VERIFY: 1
      DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

    before_script:
        - cd backend
        - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    script:
        - docker build -t $IMAGE_BACKEND:$CI_COMMIT_SHORT_SHA .
        - docker tag $IMAGE_BACKEND:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_USER/$IMAGE_BACKEND:$CI_COMMIT_SHORT_SHA
        - docker push $CI_REGISTRY_USER/$IMAGE_BACKEND:$CI_COMMIT_SHORT_SHA
        
build_image_frontend:
    stage: build
    image: docker:20.10.7
    services:
      - docker:20.10.7-dind
    variables:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_CERTDIR: "/certs"
      DOCKER_TLS_VERIFY: 1
      DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
 
    before_script:
        - cd frontend
        - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    script:
        - docker build -t $IMAGE_FRONTEND:$CI_COMMIT_SHORT_SHA .
        - docker tag $IMAGE_FRONTEND:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_USER/$IMAGE_FRONTEND:$CI_COMMIT_SHORT_SHA
        - docker push $CI_REGISTRY_USER/$IMAGE_FRONTEND:$CI_COMMIT_SHORT_SHA

deploy_to_k8s:
    stage: deploy
    image:
      name: bitnami/kubectl:latest
      entrypoint: ['']  
    script:
        - chmod +x ./deploy.sh
        - ./deploy.sh